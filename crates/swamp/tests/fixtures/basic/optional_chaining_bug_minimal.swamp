struct Character {
    name: String<32>,
}

fn create_test_character() -> Character? {
    Character {
        name: "Test",
    }
}

fn create_none_character() -> Character? {
    none
}

#[test]
fn minimal_string_case_a_bug() {
    maybe_string: String? = none

    result = maybe_string ?? "Default"

    assert(result == "Default", 'should extract string from optional')
}


#[test]
fn minimal_optional_chaining_bug() {
    maybe_character: Character? = Character {
        name: "Test",
    }

    result = maybe_character?.name ?? "Default"

    assert(result == "Test", 'should extract string from optional LHS')
}


#[test]
fn minimal_optional_chaining_bug_create() {
    maybe_character = create_test_character()

    result = maybe_character?.name ?? "Default"

    assert(result == "Test", 'should extract string from optional')
}

#[test]
fn minimal_optional_chaining_none_case() {
    maybe_character = create_none_character()

    result = maybe_character?.name ?? "Default"

    assert(result == "Default", 'should use default when character is none')
}
